name: Continuous Interaction With DockerHub

on:
  workflow_dispatch:
    inputs:
      DOCKER_CONTAINER_PORT:
        description: "Docker Container Port"
        required: true
      DOCKER_CONTAINER_CONTENT:
        description: "Docker Container Content"
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: ./virtual
          push: true
          tags: |
            yakirbartech/pipemasterci:${{ github.event.inputs.DOCKER_CONTAINER_PORT }}

      - name: Logout from Docker Hub
        run: docker logout

    # steps:
    #   - name: Checkout code
    #     uses: actions/checkout@v2

    #   - name: Set up Docker Buildx
    #     uses: docker/setup-buildx-action@v1

    #   - name: Configure Docker to use HTTP for Nexus
    #     run: |
    #       echo '{"insecure-registries":["34.207.206.230:8080"]}' | sudo tee /etc/docker/daemon.json
    #       sudo systemctl restart docker

    #   - name: Login to Nexus Repository
    #     uses: docker/login-action@v2
    #     with:
    #       registry: 34.207.206.230:8080
    #       username: ${{ secrets.NEXUSHUB_USERNAME }}
    #       password: ${{ secrets.NEXUSHUB_PASSWORD }}

    #   - name: Build Docker image
    #     run: |
    #       docker build -t 34.207.206.230:8080/pipemasterci/virtual:0.1 ./virtual

    #   - name: Push Docker image to Nexus
    #     run: |
    #       docker push 34.207.206.230:8080/pipemasterci/virtual:0.1

    #   - name: Logout from Nexus Repository
    #     run: docker logout 34.207.206.230:8080

  pull-and-run:
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: Pull and run Docker image
        run: |
          sudo docker run -d \
            -p ${{ github.event.inputs.DOCKER_CONTAINER_PORT }}:${{ github.event.inputs.DOCKER_CONTAINER_PORT }} \
            -e PORT=${{ github.event.inputs.DOCKER_CONTAINER_PORT }} \
            -e CONTENT="${{ github.event.inputs.DOCKER_CONTAINER_CONTENT }}" \
            yakirbartech/pipemasterci:${{ github.event.inputs.DOCKER_CONTAINER_PORT }}